name: Deploy Thulite site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # Keep this for clarity; actual install is done by the peaceiris action below
      HUGO_VERSION: 0.141.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: '0.141.0'   # adjust to theme-required Hugo version if different
          extended: true

      - name: Verify Hugo version
        run: hugo version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: |
          # Prefer reproducible 'npm ci' when a lockfile exists, else fall back to 'npm install'
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Fetch and vendor Hugo modules
        # Ensures Hugo's modules (partials/layouts) are available in CI and avoids remote fetch failures
        run: |
          hugo mod get -u all || true
          hugo mod vendor || true
        # Optionally, add caches for Hugo modules in the future if desired

      - name: Debug: show theme/module info (temporary)
        # Useful to debug missing partials or template errors in CI logs; remove once stable
        run: |
          echo "doks-core package.json (if present):"
          cat node_modules/@thulite/doks-core/package.json || true
          echo "List partials matching head/head.html (if present):"
          find . -type f -path "*partials/head/head.html" -print || true
          echo "Search for 'try(' usages in doks-core templates:"
          grep -nR "try(" node_modules/@thulite/doks-core || true

      - name: Build production website
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
          TZ: America/Los_Angeles
        run: |
          # If your npm build script runs Hugo, keep it. Otherwise run hugo directly.
          npm run build -- --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
